use 5.008001;
use strict;
use warnings;
use ExtUtils::MakeMaker;

my $subdir    = 'lib/Linux/x86_64/Ptrace';
my $syscall_h = '/usr/include/asm-x86_64/unistd.h';
if ( !-d $subdir ) {
    mkdir "./$subdir" or die "$subdir:$!";
}
warn "making $subdir/Syscall.pm\n";
open my $wfh, '>', "$subdir/Syscall.pm" or die "$subdir/Syscall.pm:$!";
open my $rfh, '<', $syscall_h           or die "$syscall_h:$!";
print $wfh <<'EOT';
# This file is automatically generated. Do not edit!
package Linux::x86_64::Ptrace::Syscall;
use base qw( Exporter );
our @EXPORT = qw(%SYSCALL %SYS);
our @EXPORT_TAGS = ( 'all' => [ @EXPORT_OK, @EXPORT ] );
our @EXPORT_OK = @EXPORT;
our %SYS = (
EOT
while (<$rfh>) {
    /^#define\s+__NR_(\w+)\s+(\d+)/o or next;
    print $wfh "\t$2 => '$1',\n";
}
print $wfh <<EOT;
);
our %SYSCALL = reverse %SYS;
1;
EOT

WriteMakefile(
    NAME          => 'Linux::x86_64::Ptrace',
    VERSION_FROM  => 'lib/Linux/x86_64/Ptrace.pm',
    PREREQ_PM     => {},
    AUTHOR        => 'keiichi diaba <daiba@cpan.org>',
    PL_FILES      => {},
    PREREQ_PM     => { 'Test::More' => 0, },
    dist          => { COMPRESS => 'gzip -9f', SUFFIX => 'gz', },
    clean => { FILES => 'Linux-x86_64-Ptrace-* lib/Linux/x86_64/Ptrace' },
);
